Dump of assembler code for function doprocessing:
   0x0000555555554ffe <+0>: push   %rbp
   0x0000555555554fff <+1>: mov    %rsp,%rbp
=> 0x0000555555555002 <+4>: add    $0xffffffffffffff80,%rsp
   0x0000555555555006 <+8>: mov    %edi,-0x74(%rbp)
   0x0000555555555009 <+11>:    mov    %fs:0x28,%rax
   0x0000555555555012 <+20>:    mov    %rax,-0x8(%rbp)
   0x0000555555555016 <+24>:    xor    %eax,%eax
   0x0000555555555018 <+26>:    mov    -0x74(%rbp),%eax
   0x000055555555501b <+29>:    mov    $0x3c,%edx
   0x0000555555555020 <+34>:    lea    0x659(%rip),%rsi        #
0x555555555680
   0x0000555555555027 <+41>:    mov    %eax,%edi
   0x0000555555555029 <+43>:    callq  0x555555554a90
   0x000055555555502e <+48>:    mov    -0x74(%rbp),%eax
   0x0000555555555031 <+51>:    mov    $0x28,%edx
   0x0000555555555036 <+56>:    lea    0x683(%rip),%rsi        #
0x5555555556c0
   0x000055555555503d <+63>:    mov    %eax,%edi
   0x000055555555503f <+65>:    callq  0x555555554a90
   0x0000555555555044 <+70>:    lea    -0x68(%rbp),%rdx
   0x0000555555555048 <+74>:    mov    -0x74(%rbp),%eax
   0x000055555555504b <+77>:    mov    %rdx,%rsi
   0x000055555555504e <+80>:    mov    %eax,%edi
   0x0000555555555050 <+82>:    callq  0x555555554d63 <read_long>
   0x0000555555555055 <+87>:    test   %eax,%eax
   0x0000555555555057 <+89>:    jne    0x555555555385 <doprocessing+903>
   0x000055555555505d <+95>:    mov    -0x68(%rbp),%rax
   0x0000555555555061 <+99>:    cmp    $0x1,%rax
   0x0000555555555065 <+103>:   je     0x55555555508c <doprocessing+142>
   0x0000555555555067 <+105>:   mov    -0x68(%rbp),%rax
   0x000055555555506b <+109>:   cmp    $0x2,%rax
   0x000055555555506f <+113>:   je     0x55555555508c <doprocessing+142>
   0x0000555555555071 <+115>:   mov    -0x74(%rbp),%eax
   0x0000555555555074 <+118>:   mov    $0x12,%edx
   0x0000555555555079 <+123>:   lea    0x669(%rip),%rsi        #
0x5555555556e9
   0x0000555555555080 <+130>:   mov    %eax,%edi
   0x0000555555555082 <+132>:   callq  0x555555554a90
   0x0000555555555087 <+137>:   jmpq   0x555555555389 <doprocessing+907>
   0x000055555555508c <+142>:   mov    -0x74(%rbp),%eax
   0x000055555555508f <+145>:   mov    $0x11,%edx
   0x0000555555555094 <+150>:   lea    0x661(%rip),%rsi        #
0x5555555556fc
   0x000055555555509b <+157>:   mov    %eax,%edi
   0x000055555555509d <+159>:   callq  0x555555554a90
   0x00005555555550a2 <+164>:   lea    -0x60(%rbp),%rdx
   0x00005555555550a6 <+168>:   mov    -0x74(%rbp),%eax
   0x00005555555550a9 <+171>:   mov    %rdx,%rsi
   0x00005555555550ac <+174>:   mov    %eax,%edi
   0x00005555555550ae <+176>:   callq  0x555555554d63 <read_long>
   0x00005555555550b3 <+181>:   test   %eax,%eax
   0x00005555555550b5 <+183>:   jne    0x555555555388 <doprocessing+906>
   0x00005555555550bb <+189>:   mov    -0x60(%rbp),%rax
   0x00005555555550bf <+193>:   test   %rax,%rax
   0x00005555555550c2 <+196>:   jg     0x5555555550df <doprocessing+225>
   0x00005555555550c4 <+198>:   mov    -0x74(%rbp),%eax
   0x00005555555550c7 <+201>:   mov    $0x19,%edx
   0x00005555555550cc <+206>:   lea    0x63b(%rip),%rsi        #
0x55555555570e
   0x00005555555550d3 <+213>:   mov    %eax,%edi
   0x00005555555550d5 <+215>:   callq  0x555555554a90
   0x00005555555550da <+220>:   jmpq   0x555555555389 <doprocessing+907>
   0x00005555555550df <+225>:   mov    -0x60(%rbp),%rax
   0x00005555555550e3 <+229>:   shl    $0x3,%rax
   0x00005555555550e7 <+233>:   mov    %rax,-0x38(%rbp)
   0x00005555555550eb <+237>:   cmpq   $0x100,-0x38(%rbp)
   0x00005555555550f3 <+245>:   jbe    0x555555555127 <doprocessing+297>
   0x00005555555550f5 <+247>:   mov    -0x38(%rbp),%rax
   0x00005555555550f9 <+251>:   mov    %rax,%rdi
   0x00005555555550fc <+254>:   callq  0x555555554ae8
   0x0000555555555101 <+259>:   mov    %rax,-0x58(%rbp)
   0x0000555555555105 <+263>:   cmpq   $0x0,-0x58(%rbp)
   0x000055555555510a <+268>:   jne    0x555555555162 <doprocessing+356>
   0x000055555555510c <+270>:   mov    -0x74(%rbp),%eax
   0x000055555555510f <+273>:   mov    $0x3f,%edx
   0x0000555555555114 <+278>:   lea    0x60d(%rip),%rsi        #
0x555555555728
   0x000055555555511b <+285>:   mov    %eax,%edi
   0x000055555555511d <+287>:   callq  0x555555554a90
   0x0000555555555122 <+292>:   jmpq   0x555555555389 <doprocessing+907>
   0x0000555555555127 <+297>:   mov    -0x38(%rbp),%rax
   0x000055555555512b <+301>:   lea    0xf(%rax),%rdx
   0x000055555555512f <+305>:   mov    $0x10,%eax
   0x0000555555555134 <+310>:   sub    $0x1,%rax
   0x0000555555555138 <+314>:   add    %rdx,%rax
   0x000055555555513b <+317>:   mov    $0x10,%ecx
   0x0000555555555140 <+322>:   mov    $0x0,%edx
   0x0000555555555145 <+327>:   div    %rcx
   0x0000555555555148 <+330>:   imul   $0x10,%rax,%rax
   0x000055555555514c <+334>:   sub    %rax,%rsp
   0x000055555555514f <+337>:   mov    %rsp,%rax
   0x0000555555555152 <+340>:   add    $0xf,%rax
   0x0000555555555156 <+344>:   shr    $0x4,%rax
   0x000055555555515a <+348>:   shl    $0x4,%rax
   0x000055555555515e <+352>:   mov    %rax,-0x58(%rbp)
   0x0000555555555162 <+356>:   movq   $0x0,-0x50(%rbp)
   0x000055555555516a <+364>:   jmp    0x5555555551a0 <doprocessing+418>
   0x000055555555516c <+366>:   mov    -0x50(%rbp),%rax
   0x0000555555555170 <+370>:   lea    0x0(,%rax,8),%rdx
   0x0000555555555178 <+378>:   mov    -0x58(%rbp),%rax
   0x000055555555517c <+382>:   add    %rax,%rdx
   0x000055555555517f <+385>:   mov    -0x74(%rbp),%eax
   0x0000555555555182 <+388>:   mov    %rdx,%rsi
   0x0000555555555185 <+391>:   mov    %eax,%edi
   0x0000555555555187 <+393>:   callq  0x555555554d63 <read_long>
   0x000055555555518c <+398>:   mov    %eax,-0x6c(%rbp)
   0x000055555555518f <+401>:   cmpl   $0x0,-0x6c(%rbp)
   0x0000555555555193 <+405>:   js     0x5555555551ac <doprocessing+430>
   0x0000555555555195 <+407>:   cmpl   $0x0,-0x6c(%rbp)
   0x0000555555555199 <+411>:   jne    0x5555555551a0 <doprocessing+418>
   0x000055555555519b <+413>:   addq   $0x1,-0x50(%rbp)
   0x00005555555551a0 <+418>:   mov    -0x60(%rbp),%rax
   0x00005555555551a4 <+422>:   cmp    %rax,-0x50(%rbp)
   0x00005555555551a8 <+426>:   jl     0x55555555516c <doprocessing+366>
   0x00005555555551aa <+428>:   jmp    0x5555555551ad <doprocessing+431>
   0x00005555555551ac <+430>:   nop
   0x00005555555551ad <+431>:   mov    -0x68(%rbp),%rax
   0x00005555555551b1 <+435>:   cmp    $0x1,%rax
   0x00005555555551b5 <+439>:   jne    0x555555555230 <doprocessing+562>
   0x00005555555551b7 <+441>:   mov    -0x60(%rbp),%rax
   0x00005555555551bb <+445>:   mov    %rax,%rdx
   0x00005555555551be <+448>:   mov    -0x58(%rbp),%rax
   0x00005555555551c2 <+452>:   mov    %rdx,%rsi
   0x00005555555551c5 <+455>:   mov    %rax,%rdi
   0x00005555555551c8 <+458>:   callq  0x555555554cd0 <super_pgcd>
   0x00005555555551cd <+463>:   mov    %rax,%rdx
   0x00005555555551d0 <+466>:   lea    -0x20(%rbp),%rax
   0x00005555555551d4 <+470>:   mov    %rax,%rsi
   0x00005555555551d7 <+473>:   mov    %rdx,%rdi
   0x00005555555551da <+476>:   callq  0x555555554e4d <ltoa>
   0x00005555555551df <+481>:   mov    -0x74(%rbp),%eax
   0x00005555555551e2 <+484>:   mov    $0x8,%edx
   0x00005555555551e7 <+489>:   lea    0x57a(%rip),%rsi        #
0x555555555768
   0x00005555555551ee <+496>:   mov    %eax,%edi
   0x00005555555551f0 <+498>:   callq  0x555555554a90
   0x00005555555551f5 <+503>:   lea    -0x20(%rbp),%rax
   0x00005555555551f9 <+507>:   mov    %rax,%rdi
   0x00005555555551fc <+510>:   callq  0x555555554a98
   0x0000555555555201 <+515>:   mov    %rax,%rdx
   0x0000555555555204 <+518>:   lea    -0x20(%rbp),%rcx
   0x0000555555555208 <+522>:   mov    -0x74(%rbp),%eax
   0x000055555555520b <+525>:   mov    %rcx,%rsi
   0x000055555555520e <+528>:   mov    %eax,%edi
   0x0000555555555210 <+530>:   callq  0x555555554a90
   0x0000555555555215 <+535>:   mov    -0x74(%rbp),%eax
   0x0000555555555218 <+538>:   mov    $0x1,%edx
   0x000055555555521d <+543>:   lea    0x54d(%rip),%rsi        #
0x555555555771
   0x0000555555555224 <+550>:   mov    %eax,%edi
   0x0000555555555226 <+552>:   callq  0x555555554a90
   0x000055555555522b <+557>:   jmpq   0x555555555389 <doprocessing+907>
   0x0000555555555230 <+562>:   mov    $0x0,%edi
   0x0000555555555235 <+567>:   callq  0x555555554ae0
   0x000055555555523a <+572>:   mov    %eax,%edi
   0x000055555555523c <+574>:   callq  0x555555554ac8
   0x0000555555555241 <+579>:   movq   $0x0,-0x48(%rbp)
   0x0000555555555249 <+587>:   jmpq   0x5555555552d5 <doprocessing+727>
   0x000055555555524e <+592>:   callq  0x555555554b30
   0x0000555555555253 <+597>:   cltq   
   0x0000555555555255 <+599>:   mov    -0x60(%rbp),%rdx
   0x0000555555555259 <+603>:   mov    %rdx,%rcx
   0x000055555555525c <+606>:   sub    -0x48(%rbp),%rcx
   0x0000555555555260 <+610>:   cqto   
   0x0000555555555262 <+612>:   idiv   %rcx
   0x0000555555555265 <+615>:   mov    -0x48(%rbp),%rax
   0x0000555555555269 <+619>:   add    %rdx,%rax
   0x000055555555526c <+622>:   mov    %rax,-0x30(%rbp)
   0x0000555555555270 <+626>:   mov    -0x48(%rbp),%rax
   0x0000555555555274 <+630>:   lea    0x0(,%rax,8),%rdx
   0x000055555555527c <+638>:   mov    -0x58(%rbp),%rax
   0x0000555555555280 <+642>:   add    %rdx,%rax
   0x0000555555555283 <+645>:   mov    (%rax),%rax
   0x0000555555555286 <+648>:   mov    %rax,-0x28(%rbp)
   0x000055555555528a <+652>:   mov    -0x48(%rbp),%rax
   0x000055555555528e <+656>:   lea    0x0(,%rax,8),%rdx
   0x0000555555555296 <+664>:   mov    -0x58(%rbp),%rax
   0x000055555555529a <+668>:   add    %rax,%rdx
   0x000055555555529d <+671>:   mov    -0x30(%rbp),%rax
   0x00005555555552a1 <+675>:   lea    0x0(,%rax,8),%rcx
   0x00005555555552a9 <+683>:   mov    -0x58(%rbp),%rax
   0x00005555555552ad <+687>:   add    %rcx,%rax
   0x00005555555552b0 <+690>:   mov    (%rax),%rax
   0x00005555555552b3 <+693>:   mov    %rax,(%rdx)
   0x00005555555552b6 <+696>:   mov    -0x30(%rbp),%rax
   0x00005555555552ba <+700>:   lea    0x0(,%rax,8),%rdx
   0x00005555555552c2 <+708>:   mov    -0x58(%rbp),%rax
   0x00005555555552c6 <+712>:   add    %rax,%rdx
   0x00005555555552c9 <+715>:   mov    -0x28(%rbp),%rax
   0x00005555555552cd <+719>:   mov    %rax,(%rdx)
   0x00005555555552d0 <+722>:   addq   $0x1,-0x48(%rbp)
   0x00005555555552d5 <+727>:   mov    -0x60(%rbp),%rax
   0x00005555555552d9 <+731>:   cmp    %rax,-0x48(%rbp)
   0x00005555555552dd <+735>:   jl     0x55555555524e <doprocessing+592>
   0x00005555555552e3 <+741>:   mov    -0x74(%rbp),%eax
   0x00005555555552e6 <+744>:   mov    $0x8,%edx
   0x00005555555552eb <+749>:   lea    0x476(%rip),%rsi        #
0x555555555768
   0x00005555555552f2 <+756>:   mov    %eax,%edi
   0x00005555555552f4 <+758>:   callq  0x555555554a90
   0x00005555555552f9 <+763>:   mov    -0x74(%rbp),%eax
   0x00005555555552fc <+766>:   mov    $0x1,%edx
   0x0000555555555301 <+771>:   lea    0x469(%rip),%rsi        #
0x555555555771
   0x0000555555555308 <+778>:   mov    %eax,%edi
   0x000055555555530a <+780>:   callq  0x555555554a90
   0x000055555555530f <+785>:   movq   $0x0,-0x40(%rbp)
   0x0000555555555317 <+793>:   jmp    0x555555555379 <doprocessing+891>
   0x0000555555555319 <+795>:   mov    -0x40(%rbp),%rax
   0x000055555555531d <+799>:   lea    0x0(,%rax,8),%rdx
   0x0000555555555325 <+807>:   mov    -0x58(%rbp),%rax
   0x0000555555555329 <+811>:   add    %rdx,%rax
   0x000055555555532c <+814>:   mov    (%rax),%rax
   0x000055555555532f <+817>:   lea    -0x20(%rbp),%rdx
   0x0000555555555333 <+821>:   mov    %rdx,%rsi
   0x0000555555555336 <+824>:   mov    %rax,%rdi
   0x0000555555555339 <+827>:   callq  0x555555554e4d <ltoa>
   0x000055555555533e <+832>:   lea    -0x20(%rbp),%rax
   0x0000555555555342 <+836>:   mov    %rax,%rdi
   0x0000555555555345 <+839>:   callq  0x555555554a98
   0x000055555555534a <+844>:   mov    %rax,%rdx
   0x000055555555534d <+847>:   lea    -0x20(%rbp),%rcx
   0x0000555555555351 <+851>:   mov    -0x74(%rbp),%eax
   0x0000555555555354 <+854>:   mov    %rcx,%rsi
   0x0000555555555357 <+857>:   mov    %eax,%edi
   0x0000555555555359 <+859>:   callq  0x555555554a90
   0x000055555555535e <+864>:   mov    -0x74(%rbp),%eax
   0x0000555555555361 <+867>:   mov    $0x1,%edx
   0x0000555555555366 <+872>:   lea    0x404(%rip),%rsi        #
0x555555555771
   0x000055555555536d <+879>:   mov    %eax,%edi
   0x000055555555536f <+881>:   callq  0x555555554a90
   0x0000555555555374 <+886>:   addq   $0x1,-0x40(%rbp)
   0x0000555555555379 <+891>:   mov    -0x60(%rbp),%rax
   0x000055555555537d <+895>:   cmp    %rax,-0x40(%rbp)
   0x0000555555555381 <+899>:   jl     0x555555555319 <doprocessing+795>
   0x0000555555555383 <+901>:   jmp    0x555555555389 <doprocessing+907>
   0x0000555555555385 <+903>:   nop
   0x0000555555555386 <+904>:   jmp    0x555555555389 <doprocessing+907>
   0x0000555555555388 <+906>:   nop
   0x0000555555555389 <+907>:   mov    -0x8(%rbp),%rax
   0x000055555555538d <+911>:   xor    %fs:0x28,%rax
   0x0000555555555396 <+920>:   je     0x55555555539d <doprocessing+927>
   0x0000555555555398 <+922>:   callq  0x555555554aa0
   0x000055555555539d <+927>:   leaveq 
   0x000055555555539e <+928>:   retq


rbp-0x50: i
rbp-0x58: longs
rbp-0x60: nb_inputs
rbp-0x6c: r
rbp-0x74: socks
